<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.binance.master.old.data.product.TradingProductMapper">
  <resultMap id="BaseResultMap" type="com.binance.master.old.models.product.TradingProduct">
    <id column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="symbol_type" jdbcType="VARCHAR" property="symbolType" />
    <result column="base_asset" jdbcType="VARCHAR" property="baseAsset" />
    <result column="quote_asset" jdbcType="VARCHAR" property="quoteAsset" />
    <result column="min_qty" jdbcType="DECIMAL" property="minQty" />
    <result column="max_qty" jdbcType="DECIMAL" property="maxQty" />
    <result column="max_price" jdbcType="DECIMAL" property="maxPrice" />
    <result column="decimal_places" jdbcType="INTEGER" property="decimalPlaces" />
    <result column="close_price" jdbcType="DECIMAL" property="closePrice" />
    <result column="prev_close" jdbcType="DECIMAL" property="prevClose" />
    <result column="rule_id" jdbcType="INTEGER" property="ruleId" />
    <result column="active" jdbcType="BIT" property="active" />
    <result column="off_market" jdbcType="BIT" property="offMarket" />
    <result column="test" jdbcType="BIT" property="test" />
    <result column="buyer_commission" jdbcType="DECIMAL" property="buyerCommission" />
    <result column="seller_commission" jdbcType="DECIMAL" property="sellerCommission" />
    <result column="maker_commission" jdbcType="DECIMAL" property="makerCommission" />
    <result column="taker_commission" jdbcType="DECIMAL" property="takerCommission" />
    <result column="buyer_commission_asset" jdbcType="VARCHAR" property="buyerCommissionAsset" />
    <result column="seller_commission_asset" jdbcType="VARCHAR" property="sellerCommissionAsset" />
    <result column="matching_unit_type" jdbcType="VARCHAR" property="matchingUnitType" />
    <result column="seq_num" jdbcType="INTEGER" property="seqNum" />
  </resultMap>
  <sql id="Base_Column_List">
    symbol, status, symbol_type, base_asset, quote_asset, min_qty, max_qty, max_price, 
    decimal_places, close_price, prev_close, rule_id, active, off_market, test, buyer_commission, 
    seller_commission, maker_commission, taker_commission, buyer_commission_asset, seller_commission_asset, 
    matching_unit_type, seq_num
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trading_product
    where symbol = #{symbol,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from trading_product
    where symbol = #{symbol,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.binance.master.old.models.product.TradingProduct">
    insert into trading_product (symbol, status, symbol_type, 
      base_asset, quote_asset, min_qty, 
      max_qty, max_price, decimal_places, 
      close_price, prev_close, rule_id, 
      active, off_market, test, buyer_commission, 
      seller_commission, maker_commission, taker_commission, 
      buyer_commission_asset, seller_commission_asset, 
      matching_unit_type, seq_num)
    values (#{symbol,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{symbolType,jdbcType=VARCHAR}, 
      #{baseAsset,jdbcType=VARCHAR}, #{quoteAsset,jdbcType=VARCHAR}, #{minQty,jdbcType=DECIMAL}, 
      #{maxQty,jdbcType=DECIMAL}, #{maxPrice,jdbcType=DECIMAL}, #{decimalPlaces,jdbcType=INTEGER}, 
      #{closePrice,jdbcType=DECIMAL}, #{prevClose,jdbcType=DECIMAL}, #{ruleId,jdbcType=INTEGER}, 
      #{active,jdbcType=BIT}, #{offMarket,jdbcType=BIT}, #{test,jdbcType=BIT}, #{buyerCommission,jdbcType=DECIMAL}, 
      #{sellerCommission,jdbcType=DECIMAL}, #{makerCommission,jdbcType=DECIMAL}, #{takerCommission,jdbcType=DECIMAL}, 
      #{buyerCommissionAsset,jdbcType=VARCHAR}, #{sellerCommissionAsset,jdbcType=VARCHAR}, 
      #{matchingUnitType,jdbcType=VARCHAR}, #{seqNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.binance.master.old.models.product.TradingProduct">
    insert into trading_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="symbol != null">
        symbol,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="symbolType != null">
        symbol_type,
      </if>
      <if test="baseAsset != null">
        base_asset,
      </if>
      <if test="quoteAsset != null">
        quote_asset,
      </if>
      <if test="minQty != null">
        min_qty,
      </if>
      <if test="maxQty != null">
        max_qty,
      </if>
      <if test="maxPrice != null">
        max_price,
      </if>
      <if test="decimalPlaces != null">
        decimal_places,
      </if>
      <if test="closePrice != null">
        close_price,
      </if>
      <if test="prevClose != null">
        prev_close,
      </if>
      <if test="ruleId != null">
        rule_id,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="offMarket != null">
        off_market,
      </if>
      <if test="test != null">
        test,
      </if>
      <if test="buyerCommission != null">
        buyer_commission,
      </if>
      <if test="sellerCommission != null">
        seller_commission,
      </if>
      <if test="makerCommission != null">
        maker_commission,
      </if>
      <if test="takerCommission != null">
        taker_commission,
      </if>
      <if test="buyerCommissionAsset != null">
        buyer_commission_asset,
      </if>
      <if test="sellerCommissionAsset != null">
        seller_commission_asset,
      </if>
      <if test="matchingUnitType != null">
        matching_unit_type,
      </if>
      <if test="seqNum != null">
        seq_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="symbol != null">
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="symbolType != null">
        #{symbolType,jdbcType=VARCHAR},
      </if>
      <if test="baseAsset != null">
        #{baseAsset,jdbcType=VARCHAR},
      </if>
      <if test="quoteAsset != null">
        #{quoteAsset,jdbcType=VARCHAR},
      </if>
      <if test="minQty != null">
        #{minQty,jdbcType=DECIMAL},
      </if>
      <if test="maxQty != null">
        #{maxQty,jdbcType=DECIMAL},
      </if>
      <if test="maxPrice != null">
        #{maxPrice,jdbcType=DECIMAL},
      </if>
      <if test="decimalPlaces != null">
        #{decimalPlaces,jdbcType=INTEGER},
      </if>
      <if test="closePrice != null">
        #{closePrice,jdbcType=DECIMAL},
      </if>
      <if test="prevClose != null">
        #{prevClose,jdbcType=DECIMAL},
      </if>
      <if test="ruleId != null">
        #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        #{active,jdbcType=BIT},
      </if>
      <if test="offMarket != null">
        #{offMarket,jdbcType=BIT},
      </if>
      <if test="test != null">
        #{test,jdbcType=BIT},
      </if>
      <if test="buyerCommission != null">
        #{buyerCommission,jdbcType=DECIMAL},
      </if>
      <if test="sellerCommission != null">
        #{sellerCommission,jdbcType=DECIMAL},
      </if>
      <if test="makerCommission != null">
        #{makerCommission,jdbcType=DECIMAL},
      </if>
      <if test="takerCommission != null">
        #{takerCommission,jdbcType=DECIMAL},
      </if>
      <if test="buyerCommissionAsset != null">
        #{buyerCommissionAsset,jdbcType=VARCHAR},
      </if>
      <if test="sellerCommissionAsset != null">
        #{sellerCommissionAsset,jdbcType=VARCHAR},
      </if>
      <if test="matchingUnitType != null">
        #{matchingUnitType,jdbcType=VARCHAR},
      </if>
      <if test="seqNum != null">
        #{seqNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.binance.master.old.models.product.TradingProduct">
    update trading_product
    <set>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="symbolType != null">
        symbol_type = #{symbolType,jdbcType=VARCHAR},
      </if>
      <if test="baseAsset != null">
        base_asset = #{baseAsset,jdbcType=VARCHAR},
      </if>
      <if test="quoteAsset != null">
        quote_asset = #{quoteAsset,jdbcType=VARCHAR},
      </if>
      <if test="minQty != null">
        min_qty = #{minQty,jdbcType=DECIMAL},
      </if>
      <if test="maxQty != null">
        max_qty = #{maxQty,jdbcType=DECIMAL},
      </if>
      <if test="maxPrice != null">
        max_price = #{maxPrice,jdbcType=DECIMAL},
      </if>
      <if test="decimalPlaces != null">
        decimal_places = #{decimalPlaces,jdbcType=INTEGER},
      </if>
      <if test="closePrice != null">
        close_price = #{closePrice,jdbcType=DECIMAL},
      </if>
      <if test="prevClose != null">
        prev_close = #{prevClose,jdbcType=DECIMAL},
      </if>
      <if test="ruleId != null">
        rule_id = #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=BIT},
      </if>
      <if test="offMarket != null">
        off_market = #{offMarket,jdbcType=BIT},
      </if>
      <if test="test != null">
        test = #{test,jdbcType=BIT},
      </if>
      <if test="buyerCommission != null">
        buyer_commission = #{buyerCommission,jdbcType=DECIMAL},
      </if>
      <if test="sellerCommission != null">
        seller_commission = #{sellerCommission,jdbcType=DECIMAL},
      </if>
      <if test="makerCommission != null">
        maker_commission = #{makerCommission,jdbcType=DECIMAL},
      </if>
      <if test="takerCommission != null">
        taker_commission = #{takerCommission,jdbcType=DECIMAL},
      </if>
      <if test="buyerCommissionAsset != null">
        buyer_commission_asset = #{buyerCommissionAsset,jdbcType=VARCHAR},
      </if>
      <if test="sellerCommissionAsset != null">
        seller_commission_asset = #{sellerCommissionAsset,jdbcType=VARCHAR},
      </if>
      <if test="matchingUnitType != null">
        matching_unit_type = #{matchingUnitType,jdbcType=VARCHAR},
      </if>
      <if test="seqNum != null">
        seq_num = #{seqNum,jdbcType=INTEGER},
      </if>
    </set>
    where symbol = #{symbol,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.binance.master.old.models.product.TradingProduct">
    update trading_product
    set status = #{status,jdbcType=VARCHAR},
      symbol_type = #{symbolType,jdbcType=VARCHAR},
      base_asset = #{baseAsset,jdbcType=VARCHAR},
      quote_asset = #{quoteAsset,jdbcType=VARCHAR},
      min_qty = #{minQty,jdbcType=DECIMAL},
      max_qty = #{maxQty,jdbcType=DECIMAL},
      max_price = #{maxPrice,jdbcType=DECIMAL},
      decimal_places = #{decimalPlaces,jdbcType=INTEGER},
      close_price = #{closePrice,jdbcType=DECIMAL},
      prev_close = #{prevClose,jdbcType=DECIMAL},
      rule_id = #{ruleId,jdbcType=INTEGER},
      active = #{active,jdbcType=BIT},
      off_market = #{offMarket,jdbcType=BIT},
      test = #{test,jdbcType=BIT},
      buyer_commission = #{buyerCommission,jdbcType=DECIMAL},
      seller_commission = #{sellerCommission,jdbcType=DECIMAL},
      maker_commission = #{makerCommission,jdbcType=DECIMAL},
      taker_commission = #{takerCommission,jdbcType=DECIMAL},
      buyer_commission_asset = #{buyerCommissionAsset,jdbcType=VARCHAR},
      seller_commission_asset = #{sellerCommissionAsset,jdbcType=VARCHAR},
      matching_unit_type = #{matchingUnitType,jdbcType=VARCHAR},
      seq_num = #{seqNum,jdbcType=INTEGER}
    where symbol = #{symbol,jdbcType=VARCHAR}
  </update>
	<select id="fetchProductBySymbol" resultMap="BaseResultMap" parameterType="java.lang.String" >
		select * from trading_product tp where tp.symbol = #{symbol,jdbcType=VARCHAR};
	</select>
</mapper>