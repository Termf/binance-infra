<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.binance.master.old.data.sys.OldSysAddressMapper">
	<resultMap id="BaseResultMap"
		type="com.binance.master.old.models.sys.OldSysAddress">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="coin" jdbcType="VARCHAR" property="coin" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="type" jdbcType="VARCHAR" property="type" />
		<result column="wallet_name" jdbcType="VARCHAR"
			property="walletName" />
		<result column="insert_time" jdbcType="TIMESTAMP"
			property="insertTime" />
	</resultMap>
	<sql id="Base_Column_List">
		id, address, coin, name, type, wallet_name, insert_time
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_address
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from sys_address
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.binance.master.old.models.sys.OldSysAddress">
		insert into sys_address (id, address, coin,
		name, type,
		wallet_name,
		insert_time)
		values (#{id,jdbcType=INTEGER},
		#{address,jdbcType=VARCHAR},
		#{coin,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
		#{walletName,jdbcType=VARCHAR},
		#{insertTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective"
		parameterType="com.binance.master.old.models.sys.OldSysAddress">
		insert into sys_address
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="coin != null">
				coin,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="walletName != null">
				wallet_name,
			</if>
			<if test="insertTime != null">
				insert_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="coin != null">
				#{coin,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="walletName != null">
				#{walletName,jdbcType=VARCHAR},
			</if>
			<if test="insertTime != null">
				#{insertTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.binance.master.old.models.sys.OldSysAddress">
		update sys_address
		<set>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="coin != null">
				coin = #{coin,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="walletName != null">
				wallet_name = #{walletName,jdbcType=VARCHAR},
			</if>
			<if test="insertTime != null">
				insert_time = #{insertTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.binance.master.old.models.sys.OldSysAddress">
		update sys_address
		set address =
		#{address,jdbcType=VARCHAR},
		coin = #{coin,jdbcType=VARCHAR},
		name =
		#{name,jdbcType=VARCHAR},
		type = #{type,jdbcType=VARCHAR},
		wallet_name =
		#{walletName,jdbcType=VARCHAR},
		insert_time =
		#{insertTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="queryByCoinAndLikeName" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_address
		where coin = #{coin,jdbcType=VARCHAR}
		and
		INSTR(name,#{name,jdbcType=VARCHAR})>0
	</select>
</mapper>